apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pravnamreza-pvc
  labels:
    app: pravnamreza-staging
  annotations:
    pv.beta.kubernetes.io/gid: "1000"
spec:
  storageClassName: 'scw-bssd-retain'
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pravnamreza-staging
  labels:
    app: pravnamreza-staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pravnamreza-staging
  template:
    metadata:
      labels:
        app: pravnamreza-staging
    spec:
      securityContext:
        fsGroup: 1000
      volumes:
        - name: pravnamreza-persistent-storage
          persistentVolumeClaim:
            claimName: pravnamreza-pvc
        - name: nginx-config
          configMap:
            name: pravnamreza-nginx-config
      initContainers:
        - name: collectstatic
          image: pravnamreza-staging
          volumeMounts:
            - name: pravnamreza-persistent-storage
              mountPath: /pvc
          command:
            - python
            - manage.py
            - collectstatic
            - --no-input
          env:
            - name: APP_ENV
              value: production
            - name: STATIC_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/static/
            - name: MEDIA_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/media/
            - name: STATIC_ROOT
              value: /pvc/static/
            - name: MEDIA_ROOT
              value: /pvc/media/
            - name: PYTHONPATH
              value: /code:$PYTHONPATH
            - name: DJANGO_SETTINGS_MODULE
              value: pravnamreza.settings.production
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 200Mi
              cpu: 100m
        - name: migrate
          image: pravnamreza-staging
          volumeMounts:
            - name: pravnamreza-persistent-storage
              mountPath: /pvc
          command:
            - python
            - manage.py
            - migrate
          env:
            - name: APP_ENV
              value: production
            - name: STATIC_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/static/
            - name: MEDIA_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/media/
            - name: STATIC_ROOT
              value: /pvc/static/
            - name: MEDIA_ROOT
              value: /pvc/media/
            - name: PYTHONPATH
              value: /code:$PYTHONPATH
            - name: DJANGO_SETTINGS_MODULE
              value: pravnamreza.settings.production
          envFrom:
            - secretRef:
                name: pmvd-config
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 200Mi
              cpu: 100m
      containers:
        - name: pravnamreza-staging
          image: pravnamreza-staging # kustomize thing
          volumeMounts:
            - name: pravnamreza-persistent-storage
              mountPath: /pvc
          command:
            - gunicorn
            - pravnamreza.wsgi:application
            - -b
            - 0.0.0.0:8000
            - --log-level
            - DEBUG
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
          env:
            - name: APP_ENV
              value: production
            - name: STATIC_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/static/
            - name: MEDIA_URL
              value: https://files.pravnamreza-staging.lb.djnd.si/media/
            - name: STATIC_ROOT
              value: /pvc/static/
            - name: MEDIA_ROOT
              value: /pvc/media/
            - name: PYTHONPATH
              value: /code:$PYTHONPATH
            - name: DJANGO_SETTINGS_MODULE
              value: pravnamreza.settings.production
          envFrom:
            - secretRef:
                name: pmvd-config
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 200Mi
              cpu: 100m
        - name: pravnamreza-nginx
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          image: nginx:alpine
          volumeMounts:
            - name: pravnamreza-persistent-storage
              mountPath: /usr/share/nginx/html
          resources:
            requests:
              memory: 50Mi
              cpu: 50m
            limits:
              memory: 50Mi
              cpu: 50m
---
apiVersion: v1
kind: Service
metadata:
  name: pravnamreza-staging
spec:
  selector:
    app: pravnamreza-staging
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: pravnamreza-nginx
spec:
  selector:
    app: pravnamreza-staging
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pravnamreza-staging
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  tls:
    - hosts:
        - pravnamreza-staging.lb.djnd.si
      secretName: pravnamreza-tls
  rules:
    - host: pravnamreza-staging.lb.djnd.si
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pravnamreza-staging
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pravnamreza-nginx
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*" # TODO
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
spec:
  tls:
    - hosts:
        - files.pravnamreza-staging.lb.djnd.si
      secretName: pravnamreza-nginx-tls
  rules:
    - host: files.pravnamreza-staging.lb.djnd.si
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pravnamreza-nginx
                port:
                  number: 80
